{"version":3,"sources":["webpack:///./src/components/Bio.js","webpack:///./src/templates/Post.js"],"names":["bioQuery","Header","query","render","data","author","site","siteMetadata","style","display","alignItems","marginBottom","rhythm","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","to","textDecoration","color","BlogPostTemplate","post","this","props","markdownRemark","siteTitle","title","siteUrl","pageContext","previous","next","banner","imageSrc","fluid","src","keywords","frontmatter","split","Layout","location","description","excerpt","image","textAlign","scale","marginTop","date","fields","readingTime","text","imageAltText","bannerCredit","dangerouslySetInnerHTML","__html","html","Bio","flexWrap","justifyContent","listStyle","padding","slug","rel","React","Component","pageQuery"],"mappings":"sNAoDMA,EAAQ,aAiBCC,EA/DA,WACb,OACE,kBAAC,cAAD,CACEC,MAAOF,EACPG,OAAQ,SAAAC,GAAS,IACPC,EAAWD,EAAKE,KAAKC,aAArBF,OAER,OACE,yBACEG,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,aAAcC,YAAO,KAGvB,kBAAC,IAAD,CACEC,MAAOT,EAAKU,OAAOC,gBAAgBF,MACnCG,IAAKX,EACLG,MAAO,CACLS,YAAaL,YAAO,IACpBD,aAAc,EACdO,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAIjB,kBAAC,OAAD,CACEE,GAAG,IACHb,MAAO,CACLc,eAAgB,OAChBC,MAAO,YAGT,gCAASlB,GAPX,0FA3BR,U,sECCEmB,E,gLACJrB,OAAA,WACE,IAAMsB,EAAOC,KAAKC,MAAMvB,KAAKwB,eACvBC,EAAYH,KAAKC,MAAMvB,KAAKE,KAAKC,aAAauB,MAC9CC,EAAUL,KAAKC,MAAMvB,KAAKE,KAAKC,aAAawB,QAH3C,EAIoBL,KAAKC,MAAMK,YAA9BC,EAJD,EAICA,SAAUC,EAJX,EAIWA,KACVC,EAAWT,KAAKC,MAAMvB,KAAtB+B,OAIFC,EAAWL,GADCI,GAAUA,EAAOpB,gBAAgBsB,MAAMC,KAEnDC,EAAWd,EAAKe,YAAYD,SAASE,MAA1B,KAEjB,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAUjB,KAAKC,MAAMgB,SAAUb,MAAOD,GAC5C,kBAAC,IAAD,CACEC,MAAOL,EAAKe,YAAYV,MACxBc,YAAanB,EAAKoB,QAClBN,SAAUA,EACVO,MAAOV,IAET,yBACE5B,MAAO,CACLuC,UAAW,WAGb,4BAAKtB,EAAKe,YAAYV,OACtB,uBACEtB,MAAK,iBACAwC,aAAM,IADN,CAEHvC,QAAQ,QACRE,aAAcC,YAAO,GACrBqC,UAAWrC,aAAQ,MAGpBa,EAAKe,YAAYU,KARpB,MAQ6BzB,EAAK0B,OAAOC,YAAYC,OAItDlB,GACC,6BACE,kBAAC,IAAD,CACEE,MAAOF,EAAOpB,gBAAgBsB,MAC9BrB,IAAKS,EAAKe,YAAYc,eAEvB7B,EAAKe,YAAYe,cAItB,6BAEA,yBAAKC,wBAAyB,CAAEC,OAAQhC,EAAKiC,QAC7C,wBACElD,MAAO,CACLG,aAAcC,YAAO,GACrBqC,UAAWrC,YAAO,MAGtB,kBAAC+C,EAAD,MAEA,wBACEnD,MAAO,CACLC,QAAQ,OACRmD,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACG9B,GACC,kBAAC,OAAD,CAAMZ,GAAIY,EAASkB,OAAOa,KAAMC,IAAI,QAApC,KACKhC,EAASO,YAAYV,QAI9B,4BACGI,GACC,kBAAC,OAAD,CAAMb,GAAIa,EAAKiB,OAAOa,KAAMC,IAAI,QAC7B/B,EAAKM,YAAYV,MADpB,U,GA9EiBoC,IAAMC,WA2FxBC,GAFE5C,YAEO","file":"component---src-templates-post-js-383697005897a1332d7a.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nconst Header = () => {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n\n        return (\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: rhythm(1),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n\n            <Link\n              to=\"/\"\n              style={{\n                textDecoration: 'none',\n                color: 'inherit',\n              }}\n            >\n              <strong>{author}</strong> is a Software Engineer, interested in\n              UX/DX, Product Development, and Storytelling.\n            </Link>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query {\n    avatar: file(absolutePath: { regex: \"/profile_cropped.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`\n\nexport default Header\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const siteUrl = this.props.data.site.siteMetadata.siteUrl\n    const { previous, next } = this.props.pageContext\n    const { banner } = this.props.data\n\n    // banner image for social media sharing\n    const bannerSrc = banner && banner.childImageSharp.fluid.src\n    const imageSrc = siteUrl + bannerSrc\n    const keywords = post.frontmatter.keywords.split(`,`)\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.excerpt}\n          keywords={keywords}\n          image={imageSrc}\n        />\n        <div\n          style={{\n            textAlign: 'center',\n          }}\n        >\n          <h1>{post.frontmatter.title}</h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n              marginTop: rhythm(-1),\n            }}\n          >\n            {post.frontmatter.date} ☕ {post.fields.readingTime.text}\n          </p>\n        </div>\n\n        {banner && (\n          <div>\n            <Image\n              fluid={banner.childImageSharp.fluid}\n              alt={post.frontmatter.imageAltText}\n            />\n            {post.frontmatter.bannerCredit}\n          </div>\n        )}\n\n        <br />\n\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n            marginTop: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n      }\n    }\n    banner: file(absolutePath: { regex: \"/banner.jpg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 720, quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 250)\n      html\n      frontmatter {\n        title\n        category\n        date(formatString: \"DD MMMM YYYY\")\n        bannerCredit\n        imageAltText\n        keywords\n      }\n      fields {\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}