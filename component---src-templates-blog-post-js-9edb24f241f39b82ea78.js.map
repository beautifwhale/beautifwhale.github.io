{"version":3,"sources":["webpack:///./src/components/Bio.js","webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js"],"names":["bioQuery","Header","react_default","a","createElement","gatsby_browser_entry","query","render","data","author","site","siteMetadata","style","display","alignItems","marginBottom","rhythm","gatsby_image_default","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","to","textDecoration","color","_3588899882","BlogPostTemplate","post","this","props","markdownRemark","siteTitle","title","_this$props$pageConte","pageContext","previous","next","banner","Layout","location","seo","frontmatter","description","excerpt","textAlign","Object","assign","scale","marginTop","date","fluid","imageAltText","bannerCredit","dangerouslySetInnerHTML","__html","html","Bio","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography","Typography","baseFontSize","headerFontFamily","bodyFontFamily","googleFonts","name","styles","overrideStyles","_ref","blockquote","fontStyle","paddingLeft","marginLeft","borderLeft","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","_this$props","maxWidth","components_Header","href","target"],"mappings":"iMAoDMA,EAAQ,aAiBCC,EA/DA,WACb,OACEC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAON,EACPO,OAAQ,SAAAC,GAAQ,IACNC,EAAWD,EAAKE,KAAKC,aAArBF,OAER,OACEP,EAAAC,EAAAC,cAAA,OACEQ,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,aAAcC,YAAO,KAGvBd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CACEe,MAAOV,EAAKW,OAAOC,gBAAgBF,MACnCG,IAAKZ,EACLG,MAAO,CACLU,YAAaN,YAAO,IACpBD,aAAc,EACdQ,SAAU,GACVC,aAAY,QAEdC,SAAU,CACRD,aAAY,SAIhBtB,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACEqB,GAAG,IACHd,MAAO,CACLe,eAAgB,OAChBC,MAAO,YAGT1B,EAAAC,EAAAC,cAAA,cAASK,GAPX,wGA3BRD,KAAAqB,mECCEC,4FACJvB,OAAA,WACE,IAAMwB,EAAOC,KAAKC,MAAMzB,KAAK0B,eACvBC,EAAYH,KAAKC,MAAMzB,KAAKE,KAAKC,aAAayB,MAF7CC,EAGoBL,KAAKC,MAAMK,YAA9BC,EAHDF,EAGCE,SAAUC,EAHXH,EAGWG,KACVC,EAAWT,KAAKC,MAAMzB,KAAtBiC,OAER,OACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAQC,SAAUX,KAAKC,MAAMU,SAAUP,MAAOD,GAC5CjC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAKR,MAAOL,EAAKc,YAAYT,MAAOU,YAAaf,EAAKgB,UACtD7C,EAAAC,EAAAC,cAAA,OACEQ,MAAO,CACLoC,UAAW,WAGb9C,EAAAC,EAAAC,cAAA,UAAK2B,EAAKc,YAAYT,OACtBlC,EAAAC,EAAAC,cAAA,KACEQ,MAAKqC,OAAAC,OAAA,GACAC,aAAM,IADN,CAEHtC,QAAO,QACPE,aAAcC,YAAO,GACrBoC,UAAWpC,aAAQ,MAGpBe,EAAKc,YAAYQ,OAIrBZ,GACCvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CACEmD,MAAOb,EAAOrB,gBAAgBkC,MAC9BjC,IAAKU,EAAKc,YAAYU,eAEvBxB,EAAKc,YAAYW,cAItBtD,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKqD,wBAAyB,CAAEC,OAAQ3B,EAAK4B,QAC7CzD,EAAAC,EAAAC,cAAA,MACEQ,MAAO,CACLG,aAAcC,YAAO,GACrBoC,UAAWpC,YAAO,MAGtBd,EAAAC,EAAAC,cAACwD,EAAD,MAEA1D,EAAAC,EAAAC,cAAA,MACEQ,MAAO,CACLC,QAAO,OACPgD,SAAQ,OACRC,eAAc,gBACdC,UAAS,OACTC,QAAS,IAGX9D,EAAAC,EAAAC,cAAA,UACGmC,GACCrC,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMqB,GAAIa,EAAS0B,OAAOC,KAAMC,IAAI,QAApC,KACK5B,EAASM,YAAYT,QAI9BlC,EAAAC,EAAAC,cAAA,UACGoC,GACCtC,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMqB,GAAIc,EAAKyB,OAAOC,KAAMC,IAAI,QAC7B3B,EAAKK,YAAYT,MADpB,aAnEiBgC,IAAMC,WAgFxBC,GAFExC,YAEO,gDCzFtByC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAAjF,IAAAoE,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAG,EAAAD,EAAA,iCAAAa,EAAAnF,IAAA,IAAAoF,EAAAhB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAc,EAAA,IAYA,IAAMX,EAAqBR,IAAMoB,cAAc,IAEzCX,EAAc,SAAA5C,GAAK,OACvB8C,EAAA5E,EAAAC,cAACwE,EAAmBa,SAApB,KACG,SAAAC,GACC,OACEzD,EAAMzB,MACLkF,EAAgBzD,EAAM3B,QAAUoF,EAAgBzD,EAAM3B,OAAOE,MAEtDyB,EAAM1B,QAAU0B,EAAM0D,UAC5B1D,EAAMzB,KAAOyB,EAAMzB,KAAKA,KAAOkF,EAAgBzD,EAAM3B,OAAOE,MAGvDuE,EAAA5E,EAAAC,cAAA,uCAaf,SAASuE,IACP,MAAM,IAAIiB,MACR,gVATJf,EAAYgB,UAAY,CACtBrF,KAAMsF,IAAUC,OAChBzF,MAAOwF,IAAUE,OAAOC,WACxB1F,OAAQuF,IAAUI,KAClBP,SAAUG,IAAUI,wCCnCtB3B,EAAAG,EAAAD,EAAA,sBAAAzD,IAAAuD,EAAAG,EAAAD,EAAA,sBAAAtB,IAAA,IAAAgD,EAAA5B,EAAA,KAEM6B,EAAa,IAFnB7B,EAAAS,EAAAmB,GAEuBE,GAAW,CAChCC,aAAc,OACdC,iBAAkB,CAAC,iBACnBC,eAAgB,CAAC,iBACjBC,YAAa,CACX,CACEC,KAAM,aACNC,OAAQ,CAAC,aAGbC,eAAgB,SAAAC,GAAA,IAAG7F,EAAH6F,EAAG7F,OAAH,MAAiB,CAC/B8F,WAAY,CACVC,UAAW,SACXC,YAAahG,EAAO,GACpBiG,WAAYjG,EAAO,GACnBkG,WAAelG,EAAO,KAAZ,gCAUDoF,IACFpF,EAASoF,EAAWpF,OACpBmC,EAAQiD,EAAWjD,2BC7BhC,IAAsBgE,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,otECMzCK,EAAmB,SAAAX,GAAkB,IAAflE,EAAekE,EAAflE,SACpB8E,EAAgBC,UAAOC,4BAA4BhF,EAASiF,UAClE,OAAOxD,IAAMhE,cAAcyH,IAApB5E,OAAAC,OAAA,CACLP,WACA8E,iBACGA,EAAcK,QAIrBN,EAAiB3B,UAAY,CAC3BlD,SAAUmD,IAAUiC,MAAM,CACxBH,SAAU9B,IAAUE,OAAOC,aAC1BA,YAGUuB,sHChBf,SAASQ,EAATnB,GAA2D,IAA5C/D,EAA4C+D,EAA5C/D,YAAamF,EAA+BpB,EAA/BoB,KAAMC,EAAyBrB,EAAzBqB,KAAMC,EAAmBtB,EAAnBsB,SAAU/F,EAASyE,EAATzE,MAChD,OACEgG,EAAAjI,EAAAC,cAACiI,EAAA,YAAD,CACE/H,MAAOgI,EACP/H,OAAQ,SAAAC,GACN,IAAM+H,EACJzF,GAAetC,EAAKE,KAAKC,aAAamC,YACxC,OACEsF,EAAAjI,EAAAC,cAACoI,EAAArI,EAAD,CACEsI,eAAgB,CACdR,QAEF7F,MAAOA,EACPsG,cAAa,QAAUlI,EAAKE,KAAKC,aAAayB,MAC9C8F,KAAM,CACJ,CACExB,KAAI,cACJiC,QAASJ,GAEX,CACEK,SAAQ,WACRD,QAASvG,GAEX,CACEwG,SAAQ,iBACRD,QAASJ,GAEX,CACEK,SAAQ,UACRD,QAAO,WAET,CACEjC,KAAI,eACJiC,QAAO,WAET,CACEjC,KAAI,kBACJiC,QAASnI,EAAKE,KAAKC,aAAaF,QAElC,CACEiG,KAAI,gBACJiC,QAASvG,GAEX,CACEsE,KAAI,sBACJiC,QAASJ,IAGVM,OACCV,EAASW,OAAS,EACd,CACEpC,KAAI,WACJiC,QAASR,EAASY,KAAT,OAEX,IAELF,OAAOX,MAtDlB1H,KAAAwI,IA8DJhB,EAAIiB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZH,EAAInC,UAAY,CACd/C,YAAagD,IAAUE,OACvBiC,KAAMnC,IAAUE,OAChBkC,KAAMpC,IAAUoD,MAChBf,SAAUrC,IAAUqD,QAAQrD,IAAUE,QACtC5D,MAAO0D,IAAUE,OAAOC,YAGX+B,MAEf,IAAMM,EAAY,gSClCZtI,EAAQ,aAiBCC,EA9DA,WACb,OACEC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAON,EACPO,OAAQ,SAAAC,GAAQ,IACNC,EAAWD,EAAKE,KAAKC,aAArBF,OAER,OACEP,EAAAC,EAAAC,cAAA,OACEQ,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,aAAcC,YAAO,KAGvBd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CACEe,MAAOV,EAAKW,OAAOC,gBAAgBF,MACnCG,IAAKZ,EACLG,MAAO,CACLU,YAAaN,YAAO,IACpBD,aAAc,EACdQ,SAAU,GACVC,aAAY,QAEdC,SAAU,CACRD,aAAY,SAIhBtB,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACEqB,GAAG,IACHd,MAAO,CACLe,eAAgB,OAChBC,MAAO,YAGRnB,KAlCXD,KAAAqB,KCHEa,4FACJnC,OAAA,WAAS,IAAA6I,EAC+BpH,KAAKC,MAAlB0D,GADlByD,EACCzG,SADDyG,EACWhH,MADXgH,EACkBzD,UAGzB,OACEzF,EAAAC,EAAAC,cAAA,OACEQ,MAAO,CACLqG,WAAU,OACV3F,YAAW,OACX+H,SAAUrI,YAAO,IACjBgD,QAAYhD,YAAO,KAAZ,IAAoBA,YAAO,OAGpCd,EAAAC,EAAAC,cAACkJ,EAAD,MACC3D,EACDzF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,KAAGmJ,KAAK,mCAAmCC,OAAO,UAAlD,WAEK,IAHP,IAII,IACFtJ,EAAAC,EAAAC,cAAA,KAAGmJ,KAAK,kCAAkCC,OAAO,UAAjD,UAEK,IAPP,IAQI,IACFtJ,EAAAC,EAAAC,cAAA,KACEmJ,KAAK,uDACLC,OAAO,UAFT,iBAKK,IAdP,IAeI,IACFtJ,EAAAC,EAAAC,cAAA,KAAGmJ,KAAK,WAAWC,OAAO,UAA1B,aAhCWpF,IAAMC,WAyCZ3B","file":"component---src-templates-blog-post-js-9edb24f241f39b82ea78.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nconst Header = () => {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n\n        return (\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: rhythm(1),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n\n            <Link\n              to=\"/\"\n              style={{\n                textDecoration: 'none',\n                color: 'inherit',\n              }}\n            >\n              <strong>{author}</strong> is a Software Engineer, interested in\n              UI/UX, Developer UX, Product Development, and Storytelling.\n            </Link>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query {\n    avatar: file(absolutePath: { regex: \"/profile_cropped.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`\n\nexport default Header\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n    const { banner } = this.props.data\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <div\n          style={{\n            textAlign: 'center',\n          }}\n        >\n          <h1>{post.frontmatter.title}</h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n              marginTop: rhythm(-1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </div>\n\n        {banner && (\n          <div>\n            <Image\n              fluid={banner.childImageSharp.fluid}\n              alt={post.frontmatter.imageAltText}\n            />\n            {post.frontmatter.bannerCredit}\n          </div>\n        )}\n\n        <br />\n\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n            marginTop: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    banner: file(absolutePath: { regex: \"/banner.jpg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 720, quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 250)\n      html\n      frontmatter {\n        title\n        category\n        date(formatString: \"DD MMMM YYYY\")\n        bannerCredit\n        imageAltText\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\n\nconst typography = new Typography({\n  baseFontSize: '20px',\n  headerFontFamily: ['IBM Plex Sans'],\n  bodyFontFamily: ['IBM Plex Sans'],\n  googleFonts: [\n    {\n      name: 'Montserrat',\n      styles: ['Regular'],\n    },\n  ],\n  overrideStyles: ({ rhythm }) => ({\n    blockquote: {\n      fontStyle: 'italic',\n      paddingLeft: rhythm(1),\n      marginLeft: rhythm(0),\n      borderLeft: `${rhythm(1 / 4)} solid hsla(0,0%,0%,0.8)`,\n    },\n  }),\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nconst Header = () => {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n\n        return (\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: rhythm(1),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n\n            <Link\n              to=\"/\"\n              style={{\n                textDecoration: 'none',\n                color: 'inherit',\n              }}\n            >\n              {author}\n            </Link>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query {\n    avatar: file(absolutePath: { regex: \"/profile_cropped.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Header from './Header'\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(30),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <Header />\n        {children}\n        <footer>\n          <a href=\"https://twitter.com/daithimorton\" target=\"_blank\">\n            twitter\n          </a>{' '}\n          •{' '}\n          <a href=\"https://github.com/daithimorton\" target=\"_blank\">\n            github\n          </a>{' '}\n          •{' '}\n          <a\n            href=\"https://stackoverflow.com/users/2600522/david-morton\"\n            target=\"_blank\"\n          >\n            stackoverflow\n          </a>{' '}\n          •{' '}\n          <a href=\"/rss.xml\" target=\"_blank\">\n            rss\n          </a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}