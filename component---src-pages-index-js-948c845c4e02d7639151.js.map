{"version":3,"sources":["webpack:///./content/assets/blogBanner.jpg","webpack:///./src/pages/index.js"],"names":["module","exports","LandingPage","render","data","this","props","siteUrl","site","siteMetadata","title","posts","allMarkdownRemark","edges","imageSrc","bannerSrc","keywords","commonKeywords","image","style","display","flexWrap","marginLeft","marginRight","maxWidth","rhythm","justifyContent","map","node","banner","frontmatter","fields","slug","key","padding","margin","boxShadow","backgroundColor","width","borderBottom","fontWeight","to","lineHeight","marginBottom","readingTime","text","fluid","childImageSharp","alt","imageAltText","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,0D,gOCUrCC,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KAEFG,GADYH,EAAKI,KAAKC,aAAaC,MACzBN,EAAKI,KAAKC,aAAaF,SACjCI,EAAQP,EAAKQ,kBAAkBC,MAC/BC,EAAWP,EAAUQ,IAE3B,OACE,oCACE,kBAAC,IAAD,MAEA,kBAAC,IAAD,CACEL,MAAM,YACNM,SAAUC,IACVC,MAAOJ,IAET,yBAAKK,MAAO,CACVC,QAAS,OACTC,SAAU,OACVC,WAAW,OACXC,YAAY,OACZC,SAAUC,YAAO,IACjBC,eAAgB,WAGff,EAAMgB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAASD,EAAKE,YAAYD,OAC1BnB,EAAQkB,EAAKE,YAAYpB,OAASkB,EAAKG,OAAOC,KACpD,OAEE,yBAAKC,IAAKL,EAAKG,OAAOC,KAAMb,MAAO,CACjCe,QAAST,YAAO,GAChBU,OAAQV,YAAO,IACfW,UAAW,qCACXC,gBAAiB,QACjBC,MAAOb,YAAO,MAEd,kBAAC,OAAD,CACEN,MAAO,CACLoB,aAAc,OACdC,WAAY,WAEdC,GAAE,QAAUb,EAAKG,OAAOC,MAExB,wBACEb,MAAO,CACLuB,WAAY,SACZC,aAAc,IAIfjC,GAEH,uBAAGS,MAAO,CACRwB,aAAclB,YAAO,EAAI,KAD3B,KAEMG,EAAKG,OAAOa,YAAYC,MAC9B,kBAAC,IAAD,CACEC,MAAOjB,EAAOkB,gBAAgBD,MAC9BE,IAAKpB,EAAKE,YAAYmB,aACtB9B,MACE,CACEwB,aAAclB,YAAO,EAAI,MAI/B,uBAAGyB,wBAAyB,CAAEC,OAAQvB,EAAKwB,mB,GAlEnCC,IAAMC,WAgFjBpD,YAER,IAAMqD,EAAS","file":"component---src-pages-index-js-948c845c4e02d7639151.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/blogBanner-6321bfd83175d87f6456e93ebd1bbea1.jpg\";","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\nimport { keywords as commonKeywords } from '../utils/constants'\nimport bannerSrc from '../../content/assets/blogBanner.jpg'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\n\nclass LandingPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const siteUrl = data.site.siteMetadata.siteUrl\n    const posts = data.allMarkdownRemark.edges\n    const imageSrc = siteUrl + bannerSrc\n\n    return (\n      <>\n        <Header />\n\n        <SEO\n          title=\"All posts\"\n          keywords={commonKeywords}\n          image={imageSrc}\n        />\n        <div style={{\n          display: 'flex',\n          flexWrap: \"wrap\",\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(40),\n          justifyContent: 'center',\n        }}>\n\n          {posts.map(({ node }) => {\n            const banner = node.frontmatter.banner\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n\n              <div key={node.fields.slug} style={{\n                padding: rhythm(1),\n                margin: rhythm(1 / 2),\n                boxShadow: 'rgba(0, 0, 0, 0.1) 0px 1px 3px 0px',\n                backgroundColor: 'white',\n                width: rhythm(12)\n              }}>\n                <Link\n                  style={{\n                    borderBottom: 'none',\n                    fontWeight: 'inherit'\n                  }}\n                  to={`/blog${node.fields.slug}`}\n                >\n                  <h2\n                    style={{\n                      lineHeight: '1.25em',\n                      marginBottom: 0,\n                    }}\n                  >\n\n                    {title}\n                  </h2>\n                  <p style={{\n                    marginBottom: rhythm(1 / 3)\n                  }}>â˜• {node.fields.readingTime.text}</p>\n                  <Image\n                    fluid={banner.childImageSharp.fluid}\n                    alt={node.frontmatter.imageAltText}\n                    style={\n                      {\n                        marginBottom: rhythm(1 / 4),\n                      }\n                    }\n                  />\n                  <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n                </Link>\n\n              </div>\n            )\n          })}\n        </div>\n\n        {/* <Footer /> */}\n      </>\n    )\n  }\n}\n\nexport default LandingPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            title\n            banner {\n              childImageSharp {\n                fluid(maxWidth: 720, quality: 100) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}