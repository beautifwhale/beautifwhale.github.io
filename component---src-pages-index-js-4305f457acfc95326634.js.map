{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","textDecoration","color","to","date","category","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography","Typography","baseFontSize","headerFontFamily","bodyFontFamily","googleFonts","name","styles","overrideStyles","blockquote","fontStyle","paddingLeft","marginLeft","borderLeft","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","Header","react_default","gatsby_browser_entry","display","alignItems","gatsby_image_default","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","_3588899882","Layout","_this$props","maxWidth","padding","components_Header","href","target"],"mappings":"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","file":"component---src-pages-index-js-4305f457acfc95326634.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `software`, `javascript`, `react`]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link\n                  style={{\n                    boxShadow: `none`,\n                    textDecoration: 'none',\n                    color: 'inherit',\n                  }}\n                  to={`/blog${node.fields.slug}`}\n                >\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {node.frontmatter.date} / {node.frontmatter.category}\n              </small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\n\nconst typography = new Typography({\n  baseFontSize: '20px',\n  headerFontFamily: ['IBM Plex Sans'],\n  bodyFontFamily: ['IBM Plex Sans'],\n  googleFonts: [\n    {\n      name: 'Montserrat',\n      styles: ['Regular'],\n    },\n  ],\n  overrideStyles: ({ rhythm }) => ({\n    blockquote: {\n      fontStyle: 'italic',\n      paddingLeft: rhythm(1),\n      marginLeft: rhythm(0),\n      borderLeft: `${rhythm(1 / 4)} solid hsla(0,0%,0%,0.8)`,\n    },\n  }),\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nconst Header = () => {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n\n        return (\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: rhythm(1),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n\n            <Link\n              to=\"/\"\n              style={{\n                textDecoration: 'none',\n                color: 'inherit',\n              }}\n            >\n              {author}\n            </Link>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query {\n    avatar: file(absolutePath: { regex: \"/profile_cropped.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Header from './Header'\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(30),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <Header />\n        {children}\n        <footer>\n          <Link to=\"/\">home</Link> •{' '}\n          <a href=\"https://twitter.com/daithimorton\" target=\"_blank\">\n            twitter\n          </a>{' '}\n          •{' '}\n          <a href=\"https://github.com/daithimorton\" target=\"_blank\">\n            github\n          </a>{' '}\n          •{' '}\n          <a\n            href=\"https://stackoverflow.com/users/2600522/david-morton\"\n            target=\"_blank\"\n          >\n            stackoverflow\n          </a>{' '}\n          •{' '}\n          <a href=\"/rss.xml\" target=\"_blank\">\n            rss\n          </a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}