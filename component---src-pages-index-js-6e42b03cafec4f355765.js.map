{"version":3,"sources":["webpack:///./content/assets/blogBanner.jpg","webpack:///./src/pages/index.js"],"names":["module","exports","BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","origin","window","location","imageSrc","bannerSrc","keywords","image","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","textDecoration","color","to","date","readingTime","text","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,0D,qLCOrCC,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAGjCC,EAAS,GACS,oBAAXC,SACTD,EAASC,OAAOC,SAASF,QAE3B,IAAMG,EAAWH,EAASI,IAE1B,OACE,kBAAC,IAAD,CAAQF,SAAUX,KAAKC,MAAMU,SAAUN,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAM,YACNS,SAAU,CAAC,OAAD,oHAaVC,MAAOH,IAERN,EAAMU,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KACpD,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,wBACEE,MAAO,CACLC,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CACEF,MAAO,CACLG,UAAU,OACVC,eAAgB,OAChBC,MAAO,WAETC,GAAE,QAAUX,EAAKE,OAAOC,MAEvBf,IAGL,+BACGY,EAAKC,YAAYW,KADpB,MAC6BZ,EAAKE,OAAOW,YAAYC,MAErD,uBAAGC,wBAAyB,CAAEC,OAAQhB,EAAKiB,iB,GAvDjCC,IAAMC,WAgEfvC,YAER,IAAMwC,EAAS","file":"component---src-pages-index-js-6e42b03cafec4f355765.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/blogBanner-6321bfd83175d87f6456e93ebd1bbea1.jpg\";","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\nimport bannerSrc from '../../content/assets/blogBanner.jpg'\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    // banner image for social media sharing\n    let origin = ''\n    if (typeof window !== 'undefined') {\n      origin = window.location.origin\n    }\n    const imageSrc = origin + bannerSrc\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[\n            `blog`,\n            `software`,\n            `javascript`,\n            `react`,\n            `ux`,\n            `dx`,\n            `design`,\n            `user experience`,\n            `developer experience`,\n            `tutorials`,\n            `learning`,\n          ]}\n          image={imageSrc}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link\n                  style={{\n                    boxShadow: `none`,\n                    textDecoration: 'none',\n                    color: 'inherit',\n                  }}\n                  to={`/blog${node.fields.slug}`}\n                >\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {node.frontmatter.date} â˜• {node.fields.readingTime.text}\n              </small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM YYYY\")\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}