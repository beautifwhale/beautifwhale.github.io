{"data":{"site":{"siteMetadata":{"title":"@Beautifwhale","author":"David Morton"}},"markdownRemark":{"id":"15e89c8f-7a29-572e-a26f-c83b4c5a531a","excerpt":"I was recently asked this question in an interview: Why is overriding the equals() and hashcode() methods on your class important when using Collections? At…","html":"<p>I was recently asked this question in an interview:</p>\n<blockquote>\n<p>Why is overriding the equals() and hashcode() methods on your class important when using Collections?</p>\n</blockquote>\n<p>At first I didn’t really understand the question, I was thinking more along the\nlines of how it might be done as opposed to why you would actually do it. I\nstruggled to find the answer they were looking for. I continued to ask more\nquestions hoping to narrow down what the interviewer was looking for exactly. I\ndidn’t provide a solid answer to the question but I talked through what I was\nthinking and came close, I think.</p>\n<p>In hindsight, and with some additional Googling, I can see\nthat the question was very simple, it was my lack of experience with the\ncontext that was the problem. Curious to know the answer to the question I did\nsome searching.</p>\n<p>So it turns out the reason why you would override the <code class=\"language-text\">equals()</code> and\n<code class=\"language-text\">hashCode()</code> methods in your class is when using the Java Collections API for\nthings like <code class=\"language-text\">Hashtable</code>, <code class=\"language-text\">Hashset</code>, or <code class=\"language-text\">HashMap</code>. Both of\nthese methods are called depending on the context and data structure used.</p>\n<h1>Hashtables, HashSets, and HashMaps</h1>\n<p>To understand why its critical to override these methods its important to\nunderstand how these collections work at a high level. For example using Set to\nstore <code class=\"language-text\">Student</code> objects. We want to leverage the functionality of a Set to only allow unique objects to be stored, no duplicates.</p>\n<p><div id=\"gist94375957\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-students-java\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"blob-wrapper data type-java \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-students-java-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-students-java-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-smi\">Student</span> student1 <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Student</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>111<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>Donald<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>donaldtrump@gmail.com<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-c1\">60</span>);</td>\n      </tr>\n      <tr>\n        <td id=\"file-students-java-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-students-java-LC2\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-smi\">Student</span> student2 <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Student</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>111<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>Donald<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>donaldtrump@gmail.com<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-c1\">60</span>);</td>\n      </tr>\n      <tr>\n        <td id=\"file-students-java-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-students-java-LC3\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-smi\">Student</span> student3 <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Student</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>888<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>Peter<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>peterpan@gmail.com<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-c1\">12</span>);</td>\n      </tr>\n      <tr>\n        <td id=\"file-students-java-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-students-java-LC4\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-students-java-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-students-java-LC5\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">Set&lt;<span class=\"pl-smi\">Student</span>&gt;</span> setStudents <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashSet&lt;<span class=\"pl-smi\">Student</span>&gt;</span>();</td>\n      </tr>\n      <tr>\n        <td id=\"file-students-java-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-students-java-LC6\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-students-java-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-students-java-LC7\" class=\"blob-code blob-code-inner js-file-line\">setStudents<span class=\"pl-k\">.</span>add(student1);</td>\n      </tr>\n      <tr>\n        <td id=\"file-students-java-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-students-java-LC8\" class=\"blob-code blob-code-inner js-file-line\">setStudents<span class=\"pl-k\">.</span>add(student2);</td>\n      </tr>\n      <tr>\n        <td id=\"file-students-java-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-students-java-LC9\" class=\"blob-code blob-code-inner js-file-line\">setStudents<span class=\"pl-k\">.</span>add(student3);</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/beautifwhale/f24ce565fff27756dc8be19aa9c8c472/raw/7864ddbec5d0ca4c186cc53bb7fa48466ec4609b/students.java\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/beautifwhale/f24ce565fff27756dc8be19aa9c8c472#file-students-java\">students.java</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div>\n</p>\n<p>We can see here that we have two identical <code class=\"language-text\">Student</code> objects in terms of there\ncontents. We do not want to store both of these objects, only one is required.\nUsing the example as it is without overriding <code class=\"language-text\">equals()</code> or <code class=\"language-text\">hashCode()</code> in the\n<code class=\"language-text\">Student</code> the results of a print:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">setStudents<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>student <span class=\"token operator\">-</span><span class=\"token operator\">></span> System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Would be something like (remember to override the <code class=\"language-text\">toString()</code> method to control\nyour print output):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Student 111 Donald donaldtrump@gmail.com 60\nStudent 111 Donald donaldtrump@gmail.com 60\nStudent 888 Peter peterpan@gmail.com 12</code></pre></div>\n<p>Wait what? why is there two entries for Donald? I’m using a HashSet only one Object should have been stored.</p>\n<p>…</p>\n<p><img src=\"https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif\" alt=\"Cat\"></p>","frontmatter":{"title":"Java Object equals() and hashcode() methods","category":"Java","date":"January 30, 2019"}}},"pageContext":{"slug":"/2019-01-30/","previous":null,"next":null}}