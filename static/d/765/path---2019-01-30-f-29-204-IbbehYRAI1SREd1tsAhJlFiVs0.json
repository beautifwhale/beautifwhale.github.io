{"data":{"site":{"siteMetadata":{"title":"@Beautifwhale","author":"Daith√≠ üêã "}},"markdownRemark":{"id":"15e89c8f-7a29-572e-a26f-c83b4c5a531a","excerpt":"Why is overriding the Object.equals() and Object.hashcode() methods important when using Hashtables, HashSets, and HashMaps in Java? When using  ,  , or   in‚Ä¶","html":"<blockquote>\n<p>Why is overriding the Object.equals() and Object.hashcode() methods important when using Hashtables, HashSets, and HashMaps in Java?</p>\n</blockquote>\n<p>When using <code class=\"language-text\">Hashtable</code>, <code class=\"language-text\">Hashset</code>, or <code class=\"language-text\">HashMap</code> in Java both of\nthese methods are called depending on the context and data structure used.</p>\n<p>For example using a <code class=\"language-text\">Set</code> to store students. We want to leverage the functionality of a <code class=\"language-text\">Set</code> to only allow unique objects to be stored, no duplicates.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">Student student1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"111\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Donald\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"donaldtrump@gmail.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nStudent student2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"111\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Donald\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"donaldtrump@gmail.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nStudent student3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"888\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Peter\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"peterpan@gmail.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nSet<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Student<span class=\"token punctuation\">></span></span> setStudents <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Student<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nsetStudents<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>student1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsetStudents<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>student2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsetStudents<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>student3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We can see here that we have two identical <code class=\"language-text\">Student</code> objects, Donald, in terms of their\ncontents. We do not want to store both of these objects, only one is required.\nBut if we print out the contents of the set.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">setStudents<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>student <span class=\"token operator\">-</span><span class=\"token operator\">></span> System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We get, after some formatting, this output to the console:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Student 111 Donald donaldtrump@gmail.com 60\nStudent 111 Donald donaldtrump@gmail.com 60\nStudent 888 Peter peterpan@gmail.com 12</code></pre></div>\n<p>You can see that Donald was added to the set twice even tho they have exactly\nthe same contents.</p>\n<p>‚Ä¶</p>\n<p><img src=\"https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif\" alt=\"Cat\"></p>","frontmatter":{"title":"Hashtables, HashSets, and HashMaps in Java","category":"coding, java","date":"January 30, 2019"}}},"pageContext":{"slug":"/2019-01-30/","previous":null,"next":null}}