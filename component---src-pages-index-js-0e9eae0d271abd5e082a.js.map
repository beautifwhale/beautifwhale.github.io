{"version":3,"sources":["webpack:///./content/assets/blogBanner.jpg","webpack:///./src/pages/index.js"],"names":["module","exports","LandingPage","render","data","this","props","siteUrl","site","siteMetadata","title","posts","allMarkdownRemark","edges","imageSrc","bannerSrc","keywords","image","style","display","flexWrap","marginLeft","marginRight","maxWidth","rhythm","justifyContent","map","node","banner","frontmatter","fields","slug","key","padding","margin","boxShadow","width","marginBottom","textDecoration","color","to","fluid","childImageSharp","alt","imageAltText","readingTime","text","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,0D,oPCSrCC,E,0LACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KAEFG,GADYH,EAAKI,KAAKC,aAAaC,MACzBN,EAAKI,KAAKC,aAAaF,SACjCI,EAAQP,EAAKQ,kBAAkBC,MAC/BC,EAAWP,EAAUQ,IAE3B,OACE,oCACE,kBAAC,IAAD,MAEA,kBAAC,IAAD,CACEL,MAAM,YACNM,SAAU,CAAC,OAAD,6IAcVC,MAAOH,IAET,yBAAKI,MAAO,CACVC,QAAS,OACTC,SAAU,OACVC,WAAW,OACXC,YAAY,OACZC,SAAUC,YAAO,IACjBC,eAAgB,WAGfd,EAAMe,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAASD,EAAKE,YAAYD,OAC1BlB,EAAQiB,EAAKE,YAAYnB,OAASiB,EAAKG,OAAOC,KACpD,OACE,yBAAKC,IAAKL,EAAKG,OAAOC,KAAMb,MAAO,CACjCe,QAAS,OACTC,OAAQ,OACRC,UAAW,qCACXC,MAAO,UAEP,wBACElB,MAAO,CACLmB,aAAcb,YAAO,EAAI,KAG3B,kBAAC,OAAD,CACEN,MAAO,CACLiB,UAAU,OACVG,eAAgB,OAChBC,MAAO,WAETC,GAAE,QAAUb,EAAKG,OAAOC,MAEvBrB,IAGL,kBAAC,IAAD,CACE+B,MAAOb,EAAOc,gBAAgBD,MAC9BE,IAAKhB,EAAKE,YAAYe,eAExB,oCAAUjB,EAAKG,OAAOe,YAAYC,MAClC,uBAAGC,wBAAyB,CAAEC,OAAQrB,EAAKsB,gBAMnD,kBAAC,IAAD,Q,GA5EkBC,IAAMC,WAkFjBjD,YAER,IAAMkD,EAAS","file":"component---src-pages-index-js-0e9eae0d271abd5e082a.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/blogBanner-6321bfd83175d87f6456e93ebd1bbea1.jpg\";","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\nimport bannerSrc from '../../content/assets/blogBanner.jpg'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\n\nclass LandingPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const siteUrl = data.site.siteMetadata.siteUrl\n    const posts = data.allMarkdownRemark.edges\n    const imageSrc = siteUrl + bannerSrc\n\n    return (\n      <>\n        <Header />\n\n        <SEO\n          title=\"All posts\"\n          keywords={[\n            `blog`,\n            `software`,\n            `javascript`,\n            `ux`,\n            `dx`,\n            `design`,\n            `user experience`,\n            `developer experience`,\n            `product development`,\n            `tutorials`,\n            `learning`,\n            `teaching`,\n          ]}\n          image={imageSrc}\n        />\n        <div style={{\n          display: 'flex',\n          flexWrap: \"wrap\",\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(40),\n          justifyContent: 'center',\n        }}>\n\n          {posts.map(({ node }) => {\n            const banner = node.frontmatter.banner\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <div key={node.fields.slug} style={{\n                padding: '20px',\n                margin: '20px',\n                boxShadow: 'rgba(0, 0, 0, 0.1) 0px 1px 3px 0px',\n                width: '320px'\n              }}>\n                <h2\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link\n                    style={{\n                      boxShadow: `none`,\n                      textDecoration: 'none',\n                      color: 'inherit',\n                    }}\n                    to={`/blog${node.fields.slug}`}\n                  >\n                    {title}\n                  </Link>\n                </h2>\n                <Image\n                  fluid={banner.childImageSharp.fluid}\n                  alt={node.frontmatter.imageAltText}\n                />\n                <small>â˜• {node.fields.readingTime.text}</small>\n                <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n              </div>\n            )\n          })}\n        </div>\n\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default LandingPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            title\n            banner {\n              childImageSharp {\n                fluid(maxWidth: 720, quality: 100) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}