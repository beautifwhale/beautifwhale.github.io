{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography","Typography","baseFontSize","headerFontFamily","bodyFontFamily","googleFonts","name","styles","overrideStyles","_ref","blockquote","fontStyle","paddingLeft","marginLeft","borderLeft","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","Header","react_default","gatsby_browser_entry","style","display","alignItems","marginBottom","gatsby_image_default","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","to","textDecoration","color","_3588899882","Layout","_this$props","maxWidth","padding","components_Header","href","target"],"mappings":"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","file":"component---src-pages-404-js-efc4a95b59e91d2da3fc.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\n\nconst typography = new Typography({\n  baseFontSize: '20px',\n  headerFontFamily: ['IBM Plex Sans'],\n  bodyFontFamily: ['IBM Plex Sans'],\n  googleFonts: [\n    {\n      name: 'Montserrat',\n      styles: ['Regular'],\n    },\n  ],\n  overrideStyles: ({ rhythm }) => ({\n    blockquote: {\n      fontStyle: 'italic',\n      paddingLeft: rhythm(1),\n      marginLeft: rhythm(0),\n      borderLeft: `${rhythm(1 / 4)} solid hsla(0,0%,0%,0.8)`,\n    },\n  }),\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nconst Header = () => {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n\n        return (\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: rhythm(1),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n\n            <Link\n              to=\"/\"\n              style={{\n                textDecoration: 'none',\n                color: 'inherit',\n              }}\n            >\n              {author}\n            </Link>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query {\n    avatar: file(absolutePath: { regex: \"/profile_cropped.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Header from './Header'\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(30),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <Header />\n        {children}\n        <footer>\n          <a href=\"https://twitter.com/daithimorton\" target=\"_blank\">\n            twitter\n          </a>{' '}\n          •{' '}\n          <a href=\"https://github.com/daithimorton\" target=\"_blank\">\n            github\n          </a>{' '}\n          •{' '}\n          <a\n            href=\"https://stackoverflow.com/users/2600522/david-morton\"\n            target=\"_blank\"\n          >\n            stackoverflow\n          </a>{' '}\n          •{' '}\n          <a href=\"/rss.xml\" target=\"_blank\">\n            rss\n          </a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}